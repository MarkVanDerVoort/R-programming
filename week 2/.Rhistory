files <- list.files(pattern = ".csv")
?list.files
files <- list.files(path="./specdata", pattern=".csv")
data = read.csv("./specdata/001.csv")
data[sulfate]
data
data[,sulfate]
data[,"sulfate"]
files
id <- 1:10
?Filter
?lapply
id
format3 <- function(x){}
?format
format(3, zero.print=TRUE, width=3)
format(3, zero.print=TRUE, width=3, trim=FALSE)
formatC
sprintf("%03d.csv",3)
sprintf("%03d.csv",id)
read.csv
lapply(read.csv, sprintf("%03d.csv",id))
lapply("./specdata"+sprintf("%03d.csv",id),read.csv)
files
read.csv(files[1])
?list.files
files <- list.files(path=directory, pattern=".csv", full.names=TRUE)
directory<-"./specdata"
files <- list.files(path=directory, pattern=".csv", full.names=TRUE)
read.csv(files[1])
?Reduce
?rbind
files
contents <- lapply(files,read.csv)
contents
all <- rbind(contents,deparse=1)
content001 <- read.csv(files[1])
?subset
all
?mean
pollutantmean <- function(directory = "./specdata", pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
files = sprintf("%03d.csv",id)
contents <- lapply(files,read.csv)
all <- rbind(contents. deparse=1)
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
mean(all[,pollutant], na.rm=TRUE)
}
id
directory
files <- sprintf("%s/%03d.csv",directory,id)
files
contents <- lapply(files,read.csv)
contents
all <- rbind(contents. deparse=1)
all <- rbind(contents, deparse=1)
all
?rbind
mean(all[,pollutant], na.rm=TRUE)
pollutant <- "sulfate"
mean(all[,pollutant], na.rm=TRUE)
all[1]
?read.csv
content001["sulfate"]
read.csv
?rbind
content001
content002 <- read.csv("./specdata/002.csv")
content001002 <- rbind(content001,content002)
all <- rbind(contents)
View(all)
View(all)
all["sulfate"]
all[,"sulfate"]
all[,1]
content001["sulfate"]
content001002["sulfate"]
all
all["sulfate"]
contents
View(content001002)
content001 <- read.csv("./specdata/001.csv")
content002 <- read.csv("./specdata/002.csv")
content001002 <- rbind(content001,content002)
mean(content001["sulfate"])
mean(content001["sulfate"], na.rm=TRUE)
?mean
content001["sulfate"]
mean(content001["sulfate"], na.rm=TRUE)
s1 <- content001["sulfate"]
s1
mean(s1)
mean(content001["sulfate"])
mean(content001[,"sulfate"])
mean(content001[,"sulfate"], na.rm=TRUE)
mean(content001002[."sulfate"], na.rm=TRUE)
mean(content001002[,"sulfate"], na.rm=TRUE)
source('~/.active-rstudio-document')
pollutantmean("sulfate",1:10)
source('~/.active-rstudio-document')
pollutantmean("specdata","sulfate",1:10)
files
contents
pollutant
mean(all[,pollutant], na.rm=TRUE)
mean(all[,"sulfate"], na.rm=TRUE)
contents
contents <- lapply(files,read.csv)
?rbind
rbind
?do.call
all <- do.call("rbind",contents)  #deconstruct contents so that it fits ellipsis
all
mean(all[,pollutant], na.rm=TRUE)
source('~/.active-rstudio-document')
poll
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
?subset
subset(all,!is.na("sulfate") && !is.na("nitrate"))
sel <- subset(all,!is.na("sulfate") && !is.na("nitrate"))
sel <- subset(all,!is.na("sulfate") & !is.na("nitrate"))
sel
sel <- subset(all,!is.na("sulfate") )
sel
View(sel)
sel <- subset(all,!is.na(,"sulfate") )
all[complete.cases(all[, c("sulfate", "nitrate")]), ]
all[complete.cases(all[, c("sulfate", "nitrate")]), ]
?aggregate()
?count
??count
?size
?size()
?length
completes <- all[complete.cases(all[, c("sulfate", "nitrate")]), ]
View(completes)
View(completes)
aggregate( completes  ~ "id", completes, length)
?aggregate
aggregate( "sulfate"  ~ "id", completes, length)
aggregate( sulfate  ~ id, completes, length)
aggregate( sulfate  ~ ID, completes, length)
?header
?headers
source('~/dev/coursera/Data Science/R programming/week 2/complete.R')
complete("specdata",c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
submit()
submit()
submit()
submit
ids <- 30:25
ids
id <- ids
files <- sprintf("./%s/%03d.csv",directory,id)
files
contents <- lapply(files,read.csv)
contents
all <- do.call("rbind",contents)
all
completes <- all[complete.cases(all[, c("sulfate", "nitrate")]), ]
completes
counts <- aggregate( sulfate ~ ID, completes, length)
counts
?order
counts(30:29)
counts[30:29]
counts[6:5,]
complete("specdata", 30:25)
?print()
source('~/dev/coursera/Data Science/R programming/week 2/complete.R')
source('~/.active-rstudio-document')
complete("specdata", 30:25)
source('~/dev/coursera/Data Science/R programming/week 2/complete.R')
submit()
submit()
source('~/dev/coursera/Data Science/R programming/week 2/complete.R')
complete("specdata", 30:25)
source('~/dev/coursera/Data Science/R programming/week 2/complete.R')
complete("specdata", 30:25)
source('~/dev/coursera/Data Science/R programming/week 2/complete.R')
complete("specdata", 30:25)
submit()
?files.list
?list
?files
?dir
?cor
completes
completes$sulfate
$take
?take
??take
?cor
source('~/dev/coursera/Data Science/R programming/week 2/corr.R')
corr("specdata",150)
files
files <- list.files(path = directory, full.names=TRUE)
length(files)
?append
source('~/dev/coursera/Data Science/R programming/week 2/corr.R')
?complete.cases
source('~/dev/coursera/Data Science/R programming/week 2/corr.R')
source('~/dev/coursera/Data Science/R programming/week 2/corr.R')
corr("specdata",150)
files <- list.files(path = directory, full.names=TRUE)
files[1]
file <- files[1]
content <- read.csv(file)
ok <- complete.cases(content[,c("sulfate","nitrate")])
ok
sum(ok)
sum(!ok)
complete <- content[ok]
source('~/dev/coursera/Data Science/R programming/week 2/corr.R')
complete <- content[ok,]
cor(complete$sulfate, complete$nitrate)
corr("specdata",150)
source('~/dev/coursera/Data Science/R programming/week 2/corr.R')
corr("specdata",150)
cor <- corr("specdata",150)
source('~/dev/coursera/Data Science/R programming/week 2/corr.R')
cor <- corr("specdata",150)
length(cor)
?append
y<-numeric()
append(y,1)
y1 <- append(y,1)
y2 <- append(y1,2)
y2
content
ok
complete <- content[ok,]
complete
length(complete)
complete$sulfate
complete$nitrate
length(complete$sulfate)
length(complete$nitrate)
cor(complete$sulfate, complete$nitrate)
correlations <- numeric()
correlations
append(correlations, cor(complete$sulfate, complete$nitrate))
correlations
source('~/dev/coursera/Data Science/R programming/week 2/corr.R')
corr("specdata",150)
source('~/dev/coursera/Data Science/R programming/week 2/corr.R')
cr <- corr("specdata",150)
head(cr)
summary(cr)
cr <- corr("specdata",400)
head(cr)
cr <- corr("specdata",5000)
head(cr)
summary(cr)
cr <- corr("specdata")
length(cr)
submit()
submit()
submit()
library(datasets)
load(iris)
data(iris)
?iris
iris
View(iris)
View(iris)
mean(iris$Sepal.length)
iris$Sepal.length
?iris
dimnames(iris)
iris["Sepal.Length"]
mean(iris["Sepal.Length"])
?mean
?subset
subset(iris, Species="versicolor")
subset(iris, Sepal.Length>5)
subset(iris, Sepal.Length>5)
iris[Species=setosa]
iris[Species="setosa"]
iris[iris.Species="setosa"]
subset(iris, iris$Sepal.Length>5)
subset(iris, iris$Sepal.Length>5)
?iris
subset(iris,Species=="setosa")
mean(subset(iris,Species=="setosa"))
?mean
mean(subset(iris,Species=="virginica"))
?iris
mean(subset(iris,Species=="virginica")[,iris$Sepal.length])
subset(iris,Species=="virginica")[,iris$Sepal.length]
iris[Sepal.length]
iris[,iris$Sepal.length]
iris[,iris$Sepal.Length]
iris[,Sepal.Length]
iris[,'Sepal.Length']
iris[iris$Species=="virginica",'Sepal.Length']
mean(iris[iris$Species=="virginica",'Sepal.Length'])
?colMeans
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
apply(iris,2,mean)
?apply
data(mtcars)
View(mtcars)
?with
with(mtcars, tapply(mpg,cyl,mean))
tapply(mtcars$cyl, mtcars$mpg, mean)
debug(ls)
ls
ls(.)
bye
exit
q
exit()
bye()
?
kjdlfk
jkdhf
QQ
pos
where
q
q
q
mtcars
with(mtcars, tapply(hp,cyl,mean))
meanhp <- with(mtcars, tapply(hp,cyl,mean))
209.21429 - 82.63636
mean(iris[iris$Species=="virginica",'Sepal.Length'])
apply(iris[,1:4], 2, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
209.21429 - 82.63636
